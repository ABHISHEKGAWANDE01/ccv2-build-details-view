{
  parserClass="com.intellij.idea.plugin.hybris.impex.ImpexParser"
  parserUtilClass="com.intellij.idea.plugin.hybris.impex.util.ImpexParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Impex"
  psiImplClassSuffix="Impl"
  psiPackage="com.intellij.idea.plugin.hybris.impex.psi"
  psiImplPackage="com.intellij.idea.plugin.hybris.impex.psi.impl"

  elementTypeHolderClass="com.intellij.idea.plugin.hybris.impex.psi.ImpexTypes"
  elementTypeClass="com.intellij.idea.plugin.hybris.impex.psi.ImpexElementType"
  tokenTypeClass="com.intellij.idea.plugin.hybris.impex.psi.ImpexTokenType"

  psiImplUtilClass="com.intellij.idea.plugin.hybris.impex.util.ImpexPsiImplUtil"
}

impexFile ::= root*

private root ::= (line_break | ( !<<eof>> root_group line_break))
{recoverWhile = recover_root}

private root_group ::= (
      header_line
    | value_line
    | comment
    | bean_shell_block
    | string
    | macro_declaration_block
)
{recoverWhile = not_line_break}


/*#################################################################################*/
/*                                 Recover Rules                                   */
/*#################################################################################*/


private recover_root ::= !(
     CRLF
  |  HEADER_MODE_INSERT
  |  HEADER_MODE_INSERT_UPDATE
  |  HEADER_MODE_REMOVE
  |  HEADER_MODE_UPDATE
  |  VALUE_SUBTYPE
  |  FIELD_VALUE_SEPARATOR
  |  COMMENT_MARKER
  |  MACRO_DECLARATION
  |  BEAN_SHELL_MARKER
  |  DOUBLE_STRING
  |  SINGLE_STRING
)

private not_line_break ::= !(CRLF)
private not_line_break_or_parameters_separator ::= !(CRLF | PARAMETERS_SEPARATOR)
private recover_parameter_name ::= !(LEFT_SQUARE_BRACKET | LEFT_ROUND_BRACKET | PARAMETERS_SEPARATOR | CRLF)
private recover_header_type ::= !(LEFT_SQUARE_BRACKET | PARAMETERS_SEPARATOR | CRLF)
private recover_parameters_block ::= !(CRLF | LEFT_SQUARE_BRACKET | PARAMETERS_SEPARATOR)
private recover_modifiers_block ::= !(ALTERNATIVE_PATTERN | COMMA | CRLF | LEFT_SQUARE_BRACKET | PARAMETERS_SEPARATOR | RIGHT_ROUND_BRACKET)


/*#################################################################################*/
/*                                     Root                                        */
/*#################################################################################*/


line_break ::= CRLF


header_line ::= any_header_mode full_header_type ((PARAMETERS_SEPARATOR full_header_parameter) | PARAMETERS_SEPARATOR)*
{pin = 1}


comment ::= COMMENT_MARKER COMMENT_BODY?
{pin = 1}


macro_declaration_block ::=  MACRO_DECLARATION ASSIGN_VALUE (MACRO_VALUE | DOUBLE_STRING | MACRO_USAGE)+
{pin = 1}


bean_shell_block ::= BEAN_SHELL_MARKER (BEAN_SHELL_BODY | MACRO_USAGE)?
{pin = 1}


string ::= (SINGLE_STRING | DOUBLE_STRING)


// Value line rules
value_line ::= (VALUE_SUBTYPE value_group*) | (value_group+)

value_group ::= FIELD_VALUE_SEPARATOR value?
{pin = 1}

value ::= (((  FIELD_VALUE
             | BOOLEAN
             | DIGIT
             | string
             | MACRO_USAGE
             | FIELD_LIST_ITEM_SEPARATOR
             | DEFAULT_PATH_DELIMITER
             | DEFAULT_KEY_VALUE_DELIMITER
             | ALTERNATIVE_MAP_DELIMITER
            )+
           ) | FIELD_VALUE_IGNORE
         )


/*#################################################################################*/
/*                                 Header Line                                     */
/*#################################################################################*/


any_header_mode ::= HEADER_MODE_INSERT | HEADER_MODE_UPDATE | HEADER_MODE_INSERT_UPDATE | HEADER_MODE_REMOVE


full_header_type ::= header_type modifiers_block?
{recoverWhile = not_line_break_or_parameters_separator}

private header_type ::= HEADER_TYPE
{recoverWhile = recover_header_type}


full_header_parameter ::= any_header_parameter_name parameters_block? modifiers_block*
{pin = 1 recoverWhile = not_line_break_or_parameters_separator}

any_header_parameter_name ::= HEADER_PARAMETER_NAME | HEADER_SPECIAL_PARAMETER_NAME | MACRO_USAGE | DOCUMENT_ID
{recoverWhile = recover_parameter_name}


/*#################################################################################*/
/*                               Parameters Block                                  */
/*#################################################################################*/


parameters_block ::= LEFT_ROUND_BRACKET (parameter ((COMMA | ALTERNATIVE_PATTERN) parameter)*)? RIGHT_ROUND_BRACKET
{pin = 1 recoverWhile = recover_parameters_block}

parameter ::= (HEADER_PARAMETER_NAME | MACRO_USAGE | DOCUMENT_ID) sub_parameters_block? modifiers_block*
{pin = 1}

sub_parameters_block ::= LEFT_ROUND_BRACKET (parameter ((COMMA | ALTERNATIVE_PATTERN) parameter)*)? RIGHT_ROUND_BRACKET
{pin = 1 extends = parameters_block}

/*#################################################################################*/
/*                                Modifiers Block                                  */
/*#################################################################################*/


modifiers_block ::= LEFT_SQUARE_BRACKET (attribute_block (ATTRIBUTE_SEPARATOR attribute_block)* ) RIGHT_SQUARE_BRACKET
{pin = 1 recoverWhile = recover_modifiers_block}

attribute_block ::= attribute_name_block ASSIGN_VALUE attribute_value_block
{pin = 1}

attribute_name_block ::= (ATTRIBUTE_NAME | string)+

attribute_value_block ::= (
  ATTRIBUTE_VALUE
  | BOOLEAN
  | DIGIT
  | string
  | MACRO_USAGE
)+
